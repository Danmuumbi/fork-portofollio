{"ast":null,"code":"var _jsxFileName = \"/home/izzie/dev/izzie-portfolio/src/components/Contact.js\";\nimport React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Send from \"@material-ui/icons/Send\";\nimport emailjs from \"emailjs-com\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nconst useStyles = makeStyles(theme => ({\n  contactContainer: {\n    background: \"black\",\n    height: \"100vh\"\n  },\n  heading: {\n    color: \"white\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    marginBottom: \"1rem\"\n  },\n  form: {\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    position: \"absolute\"\n  },\n  input: {\n    color: \"#fff\"\n  },\n  button: {\n    marginTop: \"1rem\",\n    color: \"white\",\n    borderColor: \"tan\"\n  },\n  field: {\n    margin: \"1rem 0rem\"\n  }\n}));\nconst InputField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"white\"\n    },\n    \"& label\": {\n      color: \"tan\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"tan\"\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"tan\"\n      },\n      \"&.Mui-focused fieldset\": {\n        color: \"#fff\",\n        borderColor: \"tan\"\n      }\n    }\n  }\n})(TextField);\n\nconst Contact = () => {\n  const classes = useStyles();\n  const initialValues = {\n    name: '',\n    email: '',\n    message: ''\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    message: Yup.string().required('Message is required')\n  });\n\n  const handleSubmit = (values, {\n    setSubmitting,\n    resetForm\n  }) => {\n    emailjs.sendForm(\"service_rb23ccx\", // Your EmailJS Service ID\n    \"template_ybmf1qd\", // Your EmailJS Template ID\n    e.target, \"FjnoGd26TgnnRvYtg\" // Your EmailJS Public Key (User ID)\n    ).then(result => {\n      console.log(result.text);\n      resetForm(); // Optionally, show a success message or redirect the user\n    }, error => {\n      console.log(error.text); // Handle error (e.g., show error message)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    component: \"div\",\n    className: classes.contactContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, ({\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"Contact me...\"), /*#__PURE__*/React.createElement(Field, {\n    as: InputField,\n    fullWidth: true,\n    label: \"Name\",\n    variant: \"outlined\",\n    inputProps: {\n      className: classes.input\n    },\n    name: \"name\",\n    className: classes.field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"name\",\n    component: \"div\",\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    as: InputField,\n    fullWidth: true,\n    label: \"Email\",\n    variant: \"outlined\",\n    inputProps: {\n      className: classes.input\n    },\n    name: \"email\",\n    className: classes.field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"email\",\n    component: \"div\",\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    as: InputField,\n    fullWidth: true,\n    label: \"Message\",\n    variant: \"outlined\",\n    multiline: true,\n    rows: 4,\n    inputProps: {\n      className: classes.input\n    },\n    name: \"message\",\n    className: classes.field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"message\",\n    component: \"div\",\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"outlined\",\n    fullWidth: true,\n    endIcon: /*#__PURE__*/React.createElement(Send, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 26\n      }\n    }),\n    className: classes.button,\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, isSubmitting ? 'Submitting...' : 'Contact Me')))));\n};\n\nexport default Contact;","map":{"version":3,"sources":["/home/izzie/dev/izzie-portfolio/src/components/Contact.js"],"names":["React","makeStyles","withStyles","Box","TextField","Typography","Grid","Button","Send","emailjs","Formik","Form","Field","ErrorMessage","Yup","useStyles","theme","contactContainer","background","height","heading","color","textAlign","textTransform","marginBottom","form","top","left","transform","position","input","button","marginTop","borderColor","field","margin","InputField","root","Contact","classes","initialValues","name","email","message","validationSchema","object","shape","string","required","handleSubmit","values","setSubmitting","resetForm","sendForm","e","target","then","result","console","log","text","error","isSubmitting","className"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Send from \"@material-ui/icons/Send\";\nimport emailjs from \"emailjs-com\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n\nconst useStyles = makeStyles((theme) => ({\n  contactContainer: {\n    background: \"black\",\n    height: \"100vh\",\n  },\n  heading: {\n    color: \"white\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    marginBottom: \"1rem\",\n  },\n  form: {\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    position: \"absolute\",\n  },\n  input: {\n    color: \"#fff\",\n  },\n  button: {\n    marginTop: \"1rem\",\n    color: \"white\",\n    borderColor: \"tan\",\n  },\n  field: {\n    margin: \"1rem 0rem\",\n  },\n}));\n\nconst InputField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"white\",\n    },\n    \"& label\": {\n      color: \"tan\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"tan\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"tan\",\n      },\n      \"&.Mui-focused fieldset\": {\n        color: \"#fff\",\n        borderColor: \"tan\",\n      },\n    },\n  },\n})(TextField);\n\nconst Contact = () => {\n  const classes = useStyles();\n\n  const initialValues = {\n    name: '',\n    email: '',\n    message: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    message: Yup.string().required('Message is required'),\n  });\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    emailjs\n      .sendForm(\n        \"service_rb23ccx\", // Your EmailJS Service ID\n        \"template_ybmf1qd\", // Your EmailJS Template ID\n        e.target,\n        \"FjnoGd26TgnnRvYtg\" // Your EmailJS Public Key (User ID)\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n          resetForm();\n          // Optionally, show a success message or redirect the user\n        },\n        (error) => {\n          console.log(error.text);\n          // Handle error (e.g., show error message)\n        }\n      );\n  };\n\n  return (\n    <Box component=\"div\" className={classes.contactContainer}>\n      <Grid container justify=\"center\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => (\n            <Form className={classes.form}>\n              <Typography variant=\"h5\" className={classes.heading}>\n                Contact me...\n              </Typography>\n              <Field\n                as={InputField}\n                fullWidth\n                label=\"Name\"\n                variant=\"outlined\"\n                inputProps={{ className: classes.input }}\n                name=\"name\"\n                className={classes.field}\n              />\n              <ErrorMessage name=\"name\" component=\"div\" className={classes.error} />\n              <Field\n                as={InputField}\n                fullWidth\n                label=\"Email\"\n                variant=\"outlined\"\n                inputProps={{ className: classes.input }}\n                name=\"email\"\n                className={classes.field}\n              />\n              <ErrorMessage name=\"email\" component=\"div\" className={classes.error} />\n              <Field\n                as={InputField}\n                fullWidth\n                label=\"Message\"\n                variant=\"outlined\"\n                multiline\n                rows={4}\n                inputProps={{ className: classes.input }}\n                name=\"message\"\n                className={classes.field}\n              />\n              <ErrorMessage name=\"message\" component=\"div\" className={classes.error} />\n              <Button\n                type=\"submit\"\n                variant=\"outlined\"\n                fullWidth\n                endIcon={<Send />}\n                className={classes.button}\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? 'Submitting...' : 'Contact Me'}\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}